
// Motor Connections (ENA & ENB must use PWM pins)
#include <RH_ASK.h>
#include <SPI.h>

RH_ASK rf_receiver;
#define IN1 9
#define IN2 8
#define IN3 7
#define IN4 6
#define ENA 10
#define ENB 5
int s1 =12;  //left ir
int s2 = 4;  
int s3 = 13;  
int val_L,val_R,val_M;

void motorAccel() {
  for (int i = 0; i < 100; i++) {
    analogWrite(ENA, i);
    analogWrite(ENB, i);
    delay(20);
  }
}

void motorDecel() {
  for (int i = 100; i >= 0; --i) {
    analogWrite(ENA, i);
    analogWrite(ENB, i);
    delay(20);
  }
}

void forward(){
 // Set motors forward
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, HIGH);
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW); 
  analogWrite(ENA, 150);
  analogWrite(ENB, 150); 
}
void reverse(){
 // Set motors forward
  digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);  
  analogWrite(ENA, 100);
  analogWrite(ENB, 100);
}

void left(){
   digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);

  analogWrite(ENA, 100);
  analogWrite(ENB, 100);
}
void Right(){
  

  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, HIGH);
    analogWrite(ENA, 100);
  analogWrite(ENB, 100);
}

void rotate(){
 
   digitalWrite(IN1, HIGH);
  digitalWrite(IN2, LOW);
  
  digitalWrite(IN3, HIGH);
  digitalWrite(IN4, LOW);
  
  analogWrite(ENA, 100);
  analogWrite(ENB, 100);
  
}


void Move(){

  
  if(val_M == 1)//if the state of middle one is 1, which means detecting black line
  {
    forward();//car goes forward
    Serial.println("moving forward");
  }
  else
  {
    if((val_L == 1)&&(val_R == 0))//if only left line tracking sensor detects black trace
    {
      left();//car turns left
       Serial.println("moving left");
    }
else if((val_L == 0)&&(val_R == 1))//if only right line tracking sensor detects black trace
    {
      Right();//car turns right
       Serial.println("moving right");
    }
    else// if left and right line tracking sensors detect black trace or they donâ€™t read
    {
      rotate();//car searchers 
       Serial.println("rotating ");
    }
  }
}

void setup() {

 Serial.begin(9600);
 //rf
  if (!rf_receiver.init()) {
    Serial.println("RF receiver initialization failed!");
  }
  else {
    Serial.println("RF receiver initialized.");
  }

  pinMode(s1,INPUT); // make the L_pin as an input
  pinMode(s2,INPUT); // make the M_pin as an input
  pinMode(s3,INPUT); // make the R_pin as an input
  
  // Set motor connections as outputs
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(ENA, OUTPUT);
  pinMode(ENB, OUTPUT);
  
  // Start with motors off
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);

  analogWrite(ENA, 0);
  analogWrite(ENB, 0);
}

void loop() {
 
  val_L = digitalRead(s1);//LEFT
   val_M = digitalRead(s2);//MIDDLE
   val_R = digitalRead(s3);//RIGHT

//recive transmission
  uint8_t buffer[RH_ASK_MAX_MESSAGE_LEN];
  uint8_t buf_size = sizeof(buffer);

  //process  recivedtransmission
  if (rf_receiver.recv(buffer, &buf_size)) {
    String message = "";
    for (int i = 0; i < buf_size; i++) {
      message += (char)buffer[i];
       Serial.println(message);
    
    
    //check for message
    if (message == "G") {
      Serial.println("Received message: green");
      Move();

    }
    else if (message == "S") {
      Serial.println("Received message: STOP");
      

      //check for distance to traffic light
      /*
      if(diatnce btn set distance){
        if(ditance is alomost near the traffic light){
          stop
          analogWrite(ENA, 100);
          analogWrite(ENB, 100);
        }
        motorDecel();
      }
      */
     
     
    }
     else if (message == "R") {
      Serial.println("Received message: Get Ready");
      
          analogWrite(ENA, 100);
          analogWrite(ENB, 100);
    
    }
     else if (message == "B") {
      Serial.println("Received message: Boda Go");
      

      //check for distance to traffic light
      /*
      if(diatnce btn set distance){
        if(ditance is alomost near the traffic light){
          stop
          analogWrite(ENA, 100);
          analogWrite(ENB, 100);
        }
        motorDecel();
      }
      */
     
     
    }
    else {
      Serial.println("Received unknown message: " + message);
    }
  }
}
}
///////////////////////////////////////////////////
https://youtu.be/1EuNnZEp2sQ